
package javaapplicationsms;

//import java.lang.System.Logger.Level;
import java.util.regex.*;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;


public class Register extends javax.swing.JFrame {
   

    /**
     * Creates new form Register
     */
    public Register() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPane1 = new javax.swing.JOptionPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        fnlabel = new javax.swing.JPanel();
        tfFirstname = new javax.swing.JTextField();
        btnRegister = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        tfLastname = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfDateOfBirth = new javax.swing.JTextField();
        tfEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tfUsername = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tfPassword = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        tfPhonenumber = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        tfAddress = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        fnamelabel = new javax.swing.JLabel();
        doblabel = new javax.swing.JLabel();
        pnlabel = new javax.swing.JLabel();
        lnlabel = new javax.swing.JLabel();
        alabel = new javax.swing.JLabel();
        elabel = new javax.swing.JLabel();
        ulabel = new javax.swing.JLabel();
        plabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 102));
        jLabel3.setText("Register");

        fnlabel.setBackground(new java.awt.Color(0, 0, 102));
        fnlabel.setPreferredSize(new java.awt.Dimension(607, 555));

        tfFirstname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfFirstnameKeyReleased(evt);
            }
        });

        btnRegister.setBackground(new java.awt.Color(0, 102, 204));
        btnRegister.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRegister.setForeground(new java.awt.Color(255, 255, 255));
        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("First Name");

        tfLastname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfLastnameKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Date of Birth");

        tfDateOfBirth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfDateOfBirthActionPerformed(evt);
            }
        });
        tfDateOfBirth.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfDateOfBirthKeyReleased(evt);
            }
        });

        tfEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfEmailActionPerformed(evt);
            }
        });
        tfEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfEmailKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("      Last Name");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("Address");

        tfUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfUsernameActionPerformed(evt);
            }
        });
        tfUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfUsernameKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("Username");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel9.setText("Password");

        tfPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPasswordActionPerformed(evt);
            }
        });
        tfPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfPasswordKeyReleased(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(204, 0, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Back to Login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tfPhonenumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPhonenumberActionPerformed(evt);
            }
        });
        tfPhonenumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfPhonenumberKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel10.setText("Phone Number");

        tfAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfAddressActionPerformed(evt);
            }
        });
        tfAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfAddressKeyReleased(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel11.setText("Email");

        fnamelabel.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        fnamelabel.setForeground(new java.awt.Color(255, 0, 0));
        fnamelabel.setText("field required");
        fnamelabel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fnamelabelKeyReleased(evt);
            }
        });

        doblabel.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        doblabel.setForeground(new java.awt.Color(255, 0, 0));
        doblabel.setText("field required");

        pnlabel.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        pnlabel.setForeground(new java.awt.Color(255, 0, 0));
        pnlabel.setText("field required");
        pnlabel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pnlabelKeyReleased(evt);
            }
        });

        lnlabel.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lnlabel.setForeground(new java.awt.Color(255, 0, 0));
        lnlabel.setText("field required");

        alabel.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        alabel.setForeground(new java.awt.Color(255, 0, 0));
        alabel.setText("field required");

        elabel.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        elabel.setForeground(new java.awt.Color(255, 0, 0));
        elabel.setText("field required");

        ulabel.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        ulabel.setForeground(new java.awt.Color(255, 0, 0));
        ulabel.setText("field required");

        plabel.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        plabel.setForeground(new java.awt.Color(255, 0, 0));
        plabel.setText("field required");

        javax.swing.GroupLayout fnlabelLayout = new javax.swing.GroupLayout(fnlabel);
        fnlabel.setLayout(fnlabelLayout);
        fnlabelLayout.setHorizontalGroup(
            fnlabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fnlabelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fnlabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fnlabelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(fnlabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(fnlabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fnlabelLayout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(fnlabelLayout.createSequentialGroup()
                        .addComponent(plabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fnlabelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(fnlabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(fnlabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(fnamelabel, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                                .addComponent(tfFirstname)
                                .addComponent(tfLastname)
                                .addComponent(tfDateOfBirth)
                                .addComponent(tfPhonenumber)
                                .addComponent(tfUsername)
                                .addComponent(tfEmail)
                                .addComponent(tfAddress)
                                .addComponent(doblabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pnlabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lnlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(alabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(elabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ulabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(148, 148, 148))))
        );
        fnlabelLayout.setVerticalGroup(
            fnlabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fnlabelLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(fnlabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(tfFirstname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fnamelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fnlabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(tfLastname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lnlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fnlabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(tfDateOfBirth))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doblabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fnlabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPhonenumber, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fnlabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(fnlabelLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(tfAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(1, 1, 1)
                .addComponent(alabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fnlabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(tfEmail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(elabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fnlabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(tfUsername))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ulabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fnlabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(tfPassword))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(plabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(fnlabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplicationsms/icons/icons8_licence_70px.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(fnlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(30, 30, 30))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fnlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // TODO add your handling code here:
        String fname = tfFirstname.getText();
        String lname = tfLastname.getText();
        String dob = tfDateOfBirth.getText();
        String pnumber = tfPhonenumber.getText();
        String address = tfAddress.getText();
        String email = tfEmail.getText();
        String password = tfPassword.getText();
        String username = tfUsername.getText();
        
        String lb1 = fnamelabel.getText();
        String lb2 = lnlabel.getText();
        String lb3 = doblabel.getText();
        String lb4 = pnlabel.getText();
        String lb5 = alabel.getText();
        String lb6 = ulabel.getText();
        String lb7 = elabel.getText();
        String lb8 = plabel.getText();
        
        
        if(address.isEmpty()||fname.isEmpty() || lname.isEmpty()|| dob.isEmpty()|| pnumber.isEmpty()||address.isEmpty()|| email.isEmpty() ||password.isEmpty() || username.isEmpty()){
            JOptionPane.showMessageDialog(this,"All fields are required\nFill up the form properly.","Error",JOptionPane.ERROR_MESSAGE);
        }
        else if("".equals(lb1) && "".equals(lb2)&&"".equals(lb3)&& "".equals(lb4)&&"".equals(lb5)&&"".equals(lb6)&& "".equals(lb7)&&"".equals(lb8)){
            try {
                //start the login process
           
                userRegister(fname,lname,dob,pnumber,address,email,username,password);
                /*tfFirstname.setText("");
                tfLastname.setText("");
                tfDateOfBirth.setText("");
                tfPhonenumber.setText("");
                tfAddress.setText("");
                tfEmail.setText("");
                tfPassword.setText("");
                tfUsername.setText("");*/
                //JOptionPane.showMessageDialog(null,"Successfully register");
                
                
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"registration fail");
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
         }
                
        }
        
    }//GEN-LAST:event_btnRegisterActionPerformed

    
    private void tfUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfUsernameActionPerformed
    
    }//GEN-LAST:event_tfUsernameActionPerformed

    
    private void tfPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPasswordActionPerformed
        /*class InvalidPasswordException extends Exception {
  
    int passwordConditionViolated = 0;
  
    public InvalidPasswordException(int conditionViolated)
    {
        super("Invalid Password: ");
        passwordConditionViolated = conditionViolated;
    }
  
    public String printMessage()
    {
        // Call constructor of parent Exception
        // according to the condition violated
        switch (passwordConditionViolated) {
  
        // Password length should be
        // between 8 to 15 characters
        case 1:
            return ("Password length should be"
                    + " between 8 to 15 characters");
  
        // Password should not contain any space
        case 2:
            return ("Password should not"
                    + " contain any space");
  
        // Password should contain// at least one digit(0-9)
        case 3:
            return ("Password should contain"
                    + " at least one digit(0-9)");
  
        // Password should contain at least
        // one special character ( @, #, %, &, !, $ )
        case 4:
            return ("Password should contain at "
                    + "least one special character");
  
        // Password should contain at least
        // one uppercase letter(A-Z)
        case 5:
            return ("Password should contain at"
                    + " least one uppercase letter(A-Z)");
  
        // Password should contain at least
        // one lowercase letter(a-z)
        case 6:
            return ("Password should contain at"
                    + " least one lowercase letter(a-z)");
        }
  
        return ("");}
    }
  
// Driver Class
class PasswordValidator{
  
    // A utility function to check
    // whether a password is valid or not
    public static void isValid(String password)
        throws InvalidPasswordException
    {
  
        // for checking if password length
        // is between 8 and 15
        if (!((password.length() >= 8)
              && (password.length() <= 15))) {
            throw new InvalidPasswordException(1);
        }
  
        // to check space
        if (password.contains(" ")) {
            throw new InvalidPasswordException(2);
        }
        if (true) {
            int count = 0;
  
            // check digits from 0 to 9
            for (int i = 0; i <= 9; i++) {
  
                // to convert int to string
                String str1 = Integer.toString(i);
  
                if (password.contains(str1)) {
                    count = 1;
                }
            }
            if (count == 0) {
                throw new InvalidPasswordException(3);
            }
        }
  
        // for special characters
        if (!(password.contains("@") || password.contains("#")
              || password.contains("!") || password.contains("~")
              || password.contains("$") || password.contains("%")
              || password.contains("^") || password.contains("&")
              || password.contains("*") || password.contains("(")
              || password.contains(")") || password.contains("-")
              || password.contains("+") || password.contains("/")
              || password.contains(":") || password.contains(".")
              || password.contains(", ") || password.contains("<")
              || password.contains(">") || password.contains("?")
              || password.contains("|"))) {
            throw new InvalidPasswordException(4);
        }
  
        if (true) {
            int count = 0;
  
            // checking capital letters
            for (int i = 65; i <= 90; i++) {
  
                // type casting
                char c = (char)i;
  
                String str1 = Character.toString(c);
                if (password.contains(str1)) {
                    count = 1;
                }
            }
            if (count == 0) {
                throw new InvalidPasswordException(5);
            }
        }
  
        if (true) {
            int count = 0;
  
            // checking small letters
            for (int i = 90; i <= 122; i++) {
  
                // type casting
                char c = (char)i;
                String str1 = Character.toString(c);
  
                if (password.contains(str1)) {
                    count = 1;
                }
            }
            if (count == 0) {
                throw new InvalidPasswordException(6);
            }
        }
  
        // The password is valid
    }
  
    } */
    }//GEN-LAST:event_tfPasswordActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
        login l = new login();
        l.setLocationRelativeTo(null);//centre the form
        l.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tfDateOfBirthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfDateOfBirthActionPerformed
         
    }//GEN-LAST:event_tfDateOfBirthActionPerformed

    private void tfPhonenumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPhonenumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPhonenumberActionPerformed

    private void tfAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfAddressActionPerformed

    private void tfFirstnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfFirstnameKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z]{0,30}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(tfFirstname.getText());
        if(!match.matches())
        {
            fnamelabel.setText("fname name should contain only alphabets!!");
        }
        else
        {
            fnamelabel.setText("");
        }
    }//GEN-LAST:event_tfFirstnameKeyReleased

    private void tfEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfEmailActionPerformed
        // TODO add your handling code here:
     
    }//GEN-LAST:event_tfEmailActionPerformed

    private void fnamelabelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fnamelabelKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_fnamelabelKeyReleased

    private void tfLastnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfLastnameKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z]{0,30}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(tfLastname.getText());
        if(!match.matches())
        {
            lnlabel.setText("last name should contain only alphabets!!");
        }
        else
        {
            lnlabel.setText("");
        }
    }//GEN-LAST:event_tfLastnameKeyReleased

    private void tfPhonenumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPhonenumberKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[0-9]{10,10}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(tfPhonenumber.getText());
        if(!match.matches())
        {
            pnlabel.setText("Invalid phone number!");
        }
        else
        {
            pnlabel.setText("");
        }
    }//GEN-LAST:event_tfPhonenumberKeyReleased

    private void tfEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfEmailKeyReleased
   String PATTERN = "^[a-zA-Z0-9]{0,30}[@][a-zA-Z0-9]{0,10}[.][a-zA-Z]{0,5}[c][o][m]$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(tfEmail.getText());
        if(!match.matches())
        {
            elabel.setText("email is incorrect!");
        }
        else
        {
            elabel.setText("");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_tfEmailKeyReleased

    private void tfAddressKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfAddressKeyReleased
        // TODO add your handling code here:
        String PATTERN = "\\d+\\s+([a-zA-Z]+|[a-zA-Z]+\\s[a-zA-Z]+)";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(tfAddress.getText());
        if(!match.matches())
        {
            alabel.setText("");
        }
        else
        {
            alabel.setText("");
        }
    }//GEN-LAST:event_tfAddressKeyReleased

    private void tfPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPasswordKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z0-9]{0,30}[@.][a-zA-Z0-9]{1,10}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(tfPassword.getText());
        if(!match.matches())
        {
            plabel.setText("Invalid password! should contain '@' or '.'");
        }
        else
        {
            plabel.setText("");
        }
    }//GEN-LAST:event_tfPasswordKeyReleased

    private void tfUsernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfUsernameKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z0-9]{0,30}[@.][a-zA-Z0-9]{1,10}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(tfUsername.getText());
        if(!match.matches())
        {
            ulabel.setText("Invalid username! should contain '@' or '.'");
        }
        else
        {
            ulabel.setText("");
        }
    }//GEN-LAST:event_tfUsernameKeyReleased

    private void tfDateOfBirthKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfDateOfBirthKeyReleased
        // TODO add your handling code here:
        String PATTERN = "((\\d{4})-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01]))";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(tfDateOfBirth.getText());
        if(!match.matches())
        {
            doblabel.setText("dob format should be yyyy-mm-dd!");
        }
        else
        {
            doblabel.setText("");
        }
    }//GEN-LAST:event_tfDateOfBirthKeyReleased

    private void pnlabelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pnlabelKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_pnlabelKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Register().setVisible(true);
        });
        
      /*action perform*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alabel;
    private javax.swing.JButton btnRegister;
    private javax.swing.JLabel doblabel;
    private javax.swing.JLabel elabel;
    private javax.swing.JLabel fnamelabel;
    private javax.swing.JPanel fnlabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lnlabel;
    private javax.swing.JLabel plabel;
    private javax.swing.JLabel pnlabel;
    private javax.swing.JTextField tfAddress;
    private javax.swing.JTextField tfDateOfBirth;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfFirstname;
    private javax.swing.JTextField tfLastname;
    private javax.swing.JTextField tfPassword;
    private javax.swing.JTextField tfPhonenumber;
    private javax.swing.JTextField tfUsername;
    private javax.swing.JLabel ulabel;
    // End of variables declaration//GEN-END:variables

    private void userRegister(String fname,String lname, String dob, String pnumber, String address, String email, String username, String password) throws SQLException {
        Connection dbconn = DBConnection.connectDB();
        //Connection dbconn = DriverManager.getConnection("jdbc:mysql://localhost:3307/login?useSSL=true","root","Password@1234");
        if(dbconn != null)
        {
            try{
                PreparedStatement st = (PreparedStatement)dbconn.prepareStatement("INSERT INTO student(firstname,lastname,dob,phoneno,address,email,username,password) VALUES(?,?,?,?,?,?,?,?)");
          
                st.setString(1,fname);
                st.setString(2,lname);
                st.setString(3,dob);
                st.setString(4,pnumber);
                st.setString(5,address);
                st.setString(6,email);
                st.setString(7,username);
                st.setString(8,password);
                //int res = st.executeUpdate();
                int res = st.executeUpdate();
                //JOptionPane.showMessageDialog(this,"User data inserted", "Success",JOptionPane.INFORMATION_MESSAGE);
                tfFirstname.setText("");
                tfLastname.setText("");
                tfDateOfBirth.setText("");
                tfPhonenumber.setText("");
                tfAddress.setText("");
                tfEmail.setText("");
                tfUsername.setText("");
                tfPassword.setText("");
                dispose();
                login l = new login();
                l.setLocationRelativeTo(null);
                l.setVisible(true);
                /*if(res.next())
                {
                        dispose();
                        login l = new login();
                        l.setLocationRelativeTo(null);//centre the form
                        l.setVisible(true);
                }
                    else
                    {
                        System.out.println("username "+ username);
                        System.out.println("password "+password);
                        JOptionPane.showMessageDialog(this,"Username / Password not found.","Error",JOptionPane.ERROR_MESSAGE);  
                    }*/
                dbconn.close();
            }
            catch(SQLException ex)
            {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE,null,ex);
            }
        }
         else
        {
           System.out.println("The connection not available.");
        }
    }
}
